node{
 
 def mavenHome = tool name: "maven3.8.6"
 
 echo "Jenkins url is:  ${env.JENKINS_URL}"
 echo "Node Name is: ${env.NODE_NAME}"
 echo "Job Name is: ${env.JOB_NAME}"

 properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
 
 try{
 stage('CheckOutCode'){
 git branch: 'development', credentialsId: '5fdac834-72ee-46da-a805-db3688053053', url: 'https://github.com/sushmitharajesh/maven-web-application.git'
 }
 
 stage ('Build'){
 sh "${mavenHome}/bin/mvn clean package"
 }

 stage ('ExecuteSonarQubeReport'){
 sh "${mavenHome}/bin/mvn clean sonar:sonar"
 }

 stage ('UploadArtifactsIntoArtifactRepo'){
 sh "${mavenHome}/bin/mvn clean deploy"
 }

 stage ('DeployAppIntoTomcatServer'){
 sshagent(['eac5db8e-a740-41e1-9707-2d776f88cce6']) {
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war  ec2-user@172.31.45.113:/opt/apache-tomcat-9.0.68/webapps/"
 }    
 }


 }//try block closing
 catch (e){
 slackNotifications(currentBuild.result)
 throw e
 }`
 finally{
 slackNotifications(currentBuild.result)
 }
 
 }//Node closing
 
 //Code Snippet for sending slack notifaction.  
 
 def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
